spring:
  web:
    cors:
      allowed-origins: "http://localhost:19006"
  r2dbc:
    url: r2dbc:postgresql://${DB_HOST}/workin
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          lob:
            non_contextual_creation: true
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: spring-boot
            authorization-grant-type: authorization_code
            scope: openid
        provider:
          keycloak:
            issuer-uri: https://descenty.ru:8443/realms/WorkIn
            user-name-attribute: preferred_username
      resourceserver:
        jwt:
          issuer-uri: https://descenty.ru:8443/realms/WorkIn
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
  webflux:
    base-path: /api/v1
#  data:
#    rest:
#      basePath: /api
springdoc:
  api-docs:
    path: /api-docs