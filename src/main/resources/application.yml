spring:
  web:
    cors:
      allowed-origins: "http://localhost:19006"
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/workin
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          lob:
            non_contextual_creation: true
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: backend
            client-name: backend
            authorization-grant-type: authorization_code
            client-secret: NHitFrbwJCOg0Cks5mghh2jaHfSiAoi7
            scope: openid
        provider:
          keycloak:
            issuer-uri: https://${KC_HOST}:${KC_PORT}/realms/workin
            user-name-attribute: preferred_username
      resourceserver:
        jwt:
          issuer-uri: https://${KC_HOST}:${KC_PORT}/realms/workin
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
server:
  servlet:
    context-path: /api/v1
springdoc:
  api-docs:
    path: /api-docs