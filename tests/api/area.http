### Get all areas
GET {{BASE_URL}}/areas

> {%
    client.test("Status code is 200", function () {
        client.assert(response.status === 200, "Status code is not 200");
    });
    client.test("Response is an array", function () {
        client.assert(response.body instanceof Array, "Response is not an array");
    });
%}

### Add area
POST {{BASE_URL}}/areas
Content-Type: application/json

{
  "name": "Moscow"
}

> {%
    client.test("Status code is 201", function () {
        client.assert(response.status === 201, "Status code is not 201");
    });
    client.test("Response is an object", function () {
        client.assert(response.body instanceof Object, "Response is not an object");
    });
    client.test("Response has an id", function () {
        client.assert(response.body.hasOwnProperty("id"), "Response has not an id");
    });
    client.global.set("areaId", response.body.id);
%}

### Get area by id
GET {{BASE_URL}}/areas/{{areaId}}

> {%
    client.test("Status code is 200", function () {
        client.assert(response.status === 200, "Status code is not 200");
    });
    client.test("Response is an object", function () {
        client.assert(response.body instanceof Object, "Response is not an object");
    });
%}

### Update area by id
PATCH {{BASE_URL}}/areas/{{areaId}}
Content-Type: application/json

{
  "name": "Tula"
}

> {%
    client.test("Status code is 200", function () {
        client.assert(response.status === 200, "Status code is not 200");
    });
    client.test("Response is an object", function () {
        client.assert(response.body instanceof Object, "Response is not an object");
    });
    client.test("Area name has changed", function () {
        client.assert(response.body.name === "Tula", "Area name has not changed");
    });
%}

### Delete area by id
DELETE {{BASE_URL}}/areas/{{areaId}}

> {%
    client.test("Status code is 200", function () {
        client.assert(response.status === 200, "Status code is not 200");
    });
%}


#- /areas/{id}/vacancies - get all vacancies in area
#- /areas/{id}/companies - get all companies in area
#- /areas/{id}/companies/{id} - get company by id in area
#- /areas/{id}/companies/{id}/vacancies - get all vacancies in company in area
#- /areas/{id}/companies/{id}/vacancies/{id} - get vacancy by id in company in area
#
#
#/areas/122/vacancies/${UUID}
#/users/${UUID}
#/areas/122/companies/d5b1e6e0-7b28-11e9-8f9e-2a86e4085a59/vacancies/${UUID}
